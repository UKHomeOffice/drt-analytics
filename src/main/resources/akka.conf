akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel = "INFO"
  loglevel = ${?ENV_LOG_LEVEL}
  jvm-exit-on-fatal-error = true
  actor {
    allow-java-serialization = off
    serializers {
      protobuf = "uk.gov.homeoffice.drt.protobuf.Serializer"
    }
    serialization-bindings {
      "uk.gov.homeoffice.drt.protobuf.messages.FlightsMessage.FlightsDiffMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.FlightsMessage.FlightStateSnapshotMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.FlightsMessage.FeedStatusMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.FlightsMessage.FeedStatusesMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.PaxMessage.PaxCountMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.PaxMessage.OriginTerminalPaxCountsMessage" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.PaxMessage.OriginTerminalPaxCountsMessages" = protobuf
      "uk.gov.homeoffice.drt.protobuf.messages.ModelAndFeatures.ModelAndFeaturesMessage" = protobuf
    }
  }
  extensions = [akka.persistence.Persistence]
  persistence {
    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }
  }
  http {
    client.parsing.illegal-header-warnings = off
  }
}
